a.
if (!( "a" in window )) {
var a = 1 ;
}
alert(a);

ОТВЕТ:
undefinde
Потому что переменная 'windows.a' неопределена еще до её вызова 

b.
var b = function a (x) {
x && a(--x);
};
alert(a);

ОТВЕТ:
undefinde
Потому что пытаемся вызвать неопределённую переменную, 'а'

c.
function a (x) {
return x * 2 ;
}
var a;
alert(a);

ОТВЕТ:
undefinde
Потому что пытаемся вызвать неопределённую переменную, 'а'

d.
function b (x, y, a) {
arguments [ 2 ] = 10 ;
alert(a);
}
b( 1 , 2 , 3 );

ОТВЕТ:
10
Потому что мы передаём в функцию b(1,2,3), а в нутри функции присваеваем аргумент 'arguments[2] = 10'
Это массив передаваемых значений в функцию под индексом 2 аргумент 'a'  он и перезаписывается, 
остаётся только вызвать нужный агрумент 'alert(a)' 


e. *
function a () {
alert( this );
}
a.call( null );

ОТВЕТ:
window
В контексте call/apllay без использования 'use strict' всегда вызывается глобальный обьект window,
 если бы использовали 'use strict' в методе то получили 'null'